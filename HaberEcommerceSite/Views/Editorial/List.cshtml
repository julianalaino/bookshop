@model PaginatedList<Editorial>

@{ Layout = "_PanelLayout"; }

<div class="container">

    <div class="row p-3 mb-3">

        <div class="col-2 p-0">

            <h6 class="my-2">Editoriales</h6>

        </div>

        <div class="col-6">

            @using (Html.BeginForm("List", "Editorial", FormMethod.Get, new { @class = "input-group", @enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <input class="form-control form-control-light border border-primary rounded mr-2" type="search" name="SearchString" value="@ViewData["currentFilter"]" placeholder="Buscar">

                <button class="btn btn-primary border border-primary text-white" value="ListSearch" type="submit"><i class="la la-search"></i></button>
            }

        </div>

        <div class="col-4">

            <div class="btn-group">

                <a href="@Url.Action("Create", "Editorial")" class="btn btn-large btn-primary pull-right">Crear editorial</a>

                <a href="@Url.Action("List", "Editorial", new { pageIndex = 1})" class="btn btn-secondary text-white">Volver a la lista</a>

            </div>

        </div>

    </div>


    <div class="row">

        @foreach (Editorial editorial in Model)
    {
        <div class="p-3">
            <div class="card">

                <div class="card-body">

                    <h5 class="card-title text-center">@editorial.Description</h5>

                    <div>

                        <a class="btn la la-edit la-2x mx-2" title="Editar" href="@Url.Action("Edit", "Editorial", new { ID = editorial.ID })"></a>

                        <a class="btn la la-trash la-2x mx-1" onclick="return confirm('&iquest Seguro deseas eliminar la editorial?');" title="Eliminar" href="@Url.Action("Delete", "Editorial", new { ID = editorial.ID })"></a>

                    </div>

                </div>

            </div>
            </div>
            }

        </div>

        <div class="row mt-5">

            @{
            var previousDisabled = Model.HasPreviousPage ? "" : "disabled";

            var nextDisabled = Model.HasNextPage ? "" : "disabled";
            }

            <div class="col">

                <nav>

                    <ul class="pagination haber-panel-pagination">

                        <li class="page-item mx-auto"><a class="btn btn-secondary @previousDisabled" href="@Url.Action("List", "Editorial", new { pageIndex = Model.PageIndex - 1, currentFilter = @ViewData["CurrentFilter"]})">Anterior</a></li>

                        <li class="page-item mx-auto"><a class="btn btn-secondary @nextDisabled" href="@Url.Action("List", "Editorial", new { pageIndex = Model.PageIndex + 1, currentFilter = @ViewData["CurrentFilter"]})">Siguiente</a></li>

                    </ul>

                </nav>

            </div>

        </div>


    </div>